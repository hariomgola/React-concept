{"version":3,"sources":["components/UI/Card.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ChartBar","barFillHeight","maxValue","Math","round","value","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","lable","ExpenseChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpensesFilter","selected","onChange","event","console","log","target","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","useState","title","ExpenseList","items","length","id","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","JSON","stringify","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","extendedExpenseData","random","onNewExpense","DUMMY_expenses","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d14fd0d3.chunk.js","sourcesContent":["// importing the css file\r\nimport \"./Card.css\";\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          lable={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoints = [\r\n    {\r\n      label: \"Jan\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Feb\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Mar\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Apr\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"May\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jun\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"July\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Aug\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Sep\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Oct\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Nov\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Dec\",\r\n      value: 0,\r\n    },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January =>0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\nexport default ExpenseChart;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    console.log(`Change year -------> ${event.target.value}`);\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React, { useState } from \"react\";\r\n// importing the css dependencies of particular components\r\nimport \"./ExpenseItem.css\";\r\n// importing the expenseDate component\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\n// important point need to use className instead of class for using the css\r\nfunction ExpenseItem(props) {\r\n  const [title, setTitle] = useState(props.title); // first is previous value and other is seting new value\r\n\r\n  const clickHandler = () => {\r\n    setTitle(\"Updated\"); // To set New value\r\n    console.log(\"Button Clicked!!!  \");\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{title}</h2>\r\n          <div className=\"expense-item__price\">₹{props.amount}</div>\r\n        </div>\r\n        {/* <button onClick={clickHandler}>Change Title</button> */}\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpenseList = (props) => {\r\n  /** Using conditional operator directly here */\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","// importing the css clases\r\nimport React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpenseChart from \"./ExpensesChart\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpenseList from \"./ExpensesList\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  // below code is for filtered data\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpenseChart expenses={filteredExpenses} />\r\n      <ExpenseList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n}\r\nexport default Expenses;\r\n\r\n/**\r\n      <ExpenseItem\r\n        title={props.items[0].title}\r\n        amount={props.items[0].amount}\r\n        date={props.items[0].date}\r\n      />\r\n      <ExpenseItem\r\n        title={props.items[1].title}\r\n        amount={props.items[1].amount}\r\n        date={props.items[1].date}\r\n      />\r\n      <ExpenseItem\r\n        title={props.items[2].title}\r\n        amount={props.items[2].amount}\r\n        date={props.items[2].date}\r\n      />\r\n      <ExpenseItem\r\n        title={props.items[3].title}\r\n        amount={props.items[3].amount}\r\n        date={props.items[3].date}\r\n      />\r\n\r\n      // another change\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      )\r\n\r\n      // another change\r\n      {filteredExpenses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      )\r\n\r\n      // another change if else statement\r\n      {filteredExpenses.length === 0 ? (\r\n        <p> No Expenses found.</p>\r\n      ) : (\r\n        filteredExpenses.map((expense) => (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        ))\r\n      )}\r\n\r\n      // another change if if statement\r\n      {filteredExpenses.length === 0 && <p> No Expenses found.</p>}\r\n      {filteredExpenses.length > 0 &&\r\n        filteredExpenses.map((expense) => (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        ))}\r\n\r\n     // another approach moving conditional logic to javascript code\r\n      // let expenseContent = <p>No expenses found</p>;\r\n      // if (filteredExpenses.length > 0) {\r\n      //   expenseContent = filteredExpenses.map((expense) => (\r\n      //     <ExpenseItem\r\n      //       key={expense.id}\r\n      //       title={expense.title}\r\n      //       amount={expense.amount}\r\n      //       date={expense.date}\r\n      //     />\r\n      //   ));\r\n      // }\r\n      //\r\n\r\n */\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  // using many states\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // passing one state for many state\r\n  // const [userInputs, setUserInputs] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    console.log(`Title Change Handler is called - ${event.target.value}`);\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInputs({\r\n    //   ...userInputs,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // more reliable thing to use for state updated\r\n    // setUserInputs((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    console.log(`Amount Change Handler is called - ${event.target.value}`);\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    console.log(`Date Change Handler is called - ${event.target.value}`);\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  const submitHandler = (event) => {\r\n    // works on a click of submit button\r\n    event.preventDefault(); // preventing page from reloading.\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    console.log(\r\n      `Data on click of submit button ${JSON.stringify(expenseData)}`\r\n    );\r\n\r\n    // calling parent component\r\n    props.onSaveExpenseData(expenseData);\r\n    // using two way binding to clear the data\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nconst NewExpense = (props) => {\r\n  // using state for button\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (extendedExpenseData) => {\r\n    const expenseData = {\r\n      ...extendedExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    console.log(\"Getting Data from child to parent - \", expenseData);\r\n    props.onNewExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => setIsEditing(true);\r\n  const stopEditingHandler = () => setIsEditing(false);\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\r\n// importing custom component\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nconst DUMMY_expenses = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Mobile phone\",\r\n    amount: 500.2,\r\n    date: new Date(2021, 2, 15),\r\n  },\r\n  {\r\n    id: \"e2\",\r\n    title: \"Macbook\",\r\n    amount: 100.2,\r\n    date: new Date(2021, 3, 15),\r\n  },\r\n  {\r\n    id: \"e3\",\r\n    title: \"House\",\r\n    amount: 5000.8,\r\n    date: new Date(2021, 6, 15),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"Farm\",\r\n    amount: 5000.8,\r\n    date: new Date(2021, 9, 15),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  // using React state\r\n  const [expenses, setExpenses] = useState(DUMMY_expenses);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    console.log(` - Inside App.js -  `);\r\n    // setExpenses([expense, ...expenses]);\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <NewExpense onNewExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}